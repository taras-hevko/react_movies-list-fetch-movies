{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovies","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","query","setQuery","checkTitle","setCheckTitle","showMovie","movieFromServer","Response","Title","Plot","Poster","imdbID","htmlFor","type","value","id","placeholder","onChange","event","target","onClick","App","state","data","newMovie","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e449591e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = 'https://www.omdbapi.com/?apikey=f20ff057&t=';\n\nexport const getMovies = async(title) => {\n  const response = await fetch(`${URL}${title}`);\n  const movies = await response.json();\n\n  return movies;\n};\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [query, setQuery] = useState('');\n  const [checkTitle, setCheckTitle] = useState(false);\n\n  const showMovie = async() => {\n    const movieFromServer = await getMovies(query);\n\n    if (movieFromServer.Response !== 'False') {\n      setCheckTitle(false);\n      setMovie({\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster,\n        imdbUrl: '#',\n        imdbId: movieFromServer.imdbID,\n      });\n    } else {\n      setCheckTitle(true);\n    }\n  };\n\n  const addMovieAndReset = () => {\n    addMovie(movie);\n    setMovie(null);\n    setQuery('');\n    setCheckTitle(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Title:\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              onChange={event => setQuery(event.target.value)}\n            />\n          </div>\n\n          {checkTitle && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                showMovie(query);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovieAndReset()}\n            >\n              Add to the list\n            </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n        <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: propTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    const { movies } = this.state;\n\n    if (!movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      this.setState({ movies: [...movies, newMovie] });\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}